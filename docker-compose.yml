version: '3'

networks:
  monitoring: { }

volumes:
  prometheus_data: { }
  grafana_data: { }

services:

  homepage:
    image: ghcr.io/benphelps/homepage:latest
    container_name: homepage
    ports:
      - '${HOMEPAGE_PORT:-3000}:3000'
    volumes:
      - ./homepage/config:/app/config                # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock:ro # (optional) For docker integrations
    networks:
      monitoring:
      default:

  dockerproxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:latest
    container_name: dockerproxy
    environment:
      - CONTAINERS=1    # Allow access to viewing containers
      - POST=0          # Disallow any POST operations (effectively read-only)
    ports:
      - '${DOCKERPROXY_PORT:-2375}:2375'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Mounted as read-only
    restart: unless-stopped

  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: uptime-kuma
    volumes:
      - ./uptime_kuma/data:/app/data
    ports:
      - '${UPTIME_KUMA_PORT:-3001}:3001'
    restart: always

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana
    user: "104"
    depends_on:
      - prometheus
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    volumes:
      - grafana_storage:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    restart: always

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    restart: always

  cadvisor:
    image: google/cadvisor
    container_name: cadvisor
    volumes:
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "${CADVISOR_PORT:-8080}:8080"
    restart: always

  graphite-exporter:
    image: prom/graphite-exporter
    command:
      - '--graphite.mapping-config=/tmp/graphite_mapping.conf'
    volumes:
      - ./graphite-exporter/graphite_mapping.conf:/tmp/graphite_mapping.conf
    ports:
      - '9108:9108'
      - '9109:9109'
      - '9109:9109/udp'
    restart:
      always
         
  speedtest:
    container_name: speedtest
    image: henrywhitaker3/speedtest-tracker
    ports:
      - '${SPEEDTEST_PORT:-8765}:80'
    volumes:
      - /path/to/data:/config
    environment:
      - TZ=Europe/Dublin
      - PGID=
      - PUID=
      - OOKLA_EULA_GDPR=true
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "200k"
    restart: unless-stopped